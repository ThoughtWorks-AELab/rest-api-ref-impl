---
openapi: 3.0.0
servers: []
info:
  description: This is a reference API
  version: "1.0.0"
  title: Reference API
paths:
  /comments:
    post:
      summary: Create a new comment
      operationId: createComment
      description: Create a new comment
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        description: The new comment

  /posts:
    get:
      summary: gets all posts
      operationId: getPosts
      description: |
        Get all posts.
      responses:
        '200':
          description: All the posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCollection'
    post:
      summary: creates a new post
      operationId: createPost
      description: It makes a new post authored by you, the current user
      responses:
        '201':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: you messed up the input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
        description: the new post

  /posts/{id}:
    parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the post to get

    get:
      summary: get one post
      operationId: getPost
      description: no
      responses:
        '200':
          description: GREAT SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Not found
    put:
      summary: update
      operationId: updatePpost
      description: blah
      responses:
        '204':
          description: updated
        '403':
          description: ðŸš«
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
    delete:
      summary: delete
      operationId: deletePost
      description: blah
      responses:
        '200':
          description: all gone
        '403':
          description: not allowed
  /posts/{id}/comments:
    get:
      summary: get comments for post
      operationId: getPostComments
      description: blah
      responses:
        '200':
          description: you got them all
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentCollection'
  /users/current:
    get:
      summary: get yo'self
      operationId: blah
      description: blah
      responses:
        '200':
          description: blah
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
          example: Joan Baez
    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 12345-abcdef-qwerty-foobar
        title:
          type: string
          example: Goto Considered Harmful
        body:
          type: string
          example: |
            to be or not to be, that is the question
        author:
          $ref: '#/components/schemas/User'
    PostRequest:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
    PostCollection:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    Comment:
      type: object
      properties:
        body:
          type: string
          example: great job!
        id:
          type: string
        postId:
          type: string
          format: uuid
    CommentRequest:
      type: object
      properties:
        body:
          type: string
          example: love this post
        postId:
          type: string
          example: 123456-abcdef-qwerty-foobar
    CommentCollection:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Comment'